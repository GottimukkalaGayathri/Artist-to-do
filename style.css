@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');

:root {
    --primary-green: #a8e6a3;
    --secondary-green: #c8f7c5;
    --light-green: #e8f8e5;
    --mint-green: #b8f2b8;
    --sage-green: #9ed19c;
    --forest-green: #7fb27d;
    --white: #ffffff;
    --light-gray: #f8faf8;
    --medium-gray: #e2e8e2;
    --dark-gray: #4a5c4a;
    --shadow: rgba(168, 230, 163, 0.3);
    --gradient: linear-gradient(135deg, var(--light-green), var(--secondary-green));
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Quicksand', sans-serif;
    background: var(--gradient);
    min-height: 100vh;
    color: var(--dark-gray);
    overflow-x: hidden;
    position: relative;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        radial-gradient(circle at 20% 80%, rgba(168, 230, 163, 0.2) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(200, 247, 197, 0.2) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(184, 242, 184, 0.1) 0%, transparent 50%);
    pointer-events: none;
    z-index: -1;
}

.container {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
    position: relative;
    z-index: 1;
}

.header {
    text-align: center;
    margin-bottom: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 20px;
    animation: slideDown 0.8s ease-out;
}

.palette-icon, .brush-icon {
    font-size: 2.5rem;
    animation: bounce 2s infinite;
}

.brush-icon {
    animation-delay: 0.5s;
}

.header h1 {
    font-size: 3rem;
    font-weight: 700;
    color: var(--forest-green);
    text-shadow: 2px 2px 4px var(--shadow);
    position: relative;
}

.header h1::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 4px;
    background: var(--primary-green);
    border-radius: 2px;
    animation: expandWidth 1s ease-out 0.5s both;
}

.add-task-container {
    display: flex;
    gap: 15px;
    margin-bottom: 30px;
    animation: slideUp 0.8s ease-out 0.2s both;
}

#taskInput {
    flex: 1;
    padding: 18px 25px;
    border: 3px solid var(--mint-green);
    border-radius: 25px;
    font-size: 1.1rem;
    font-family: 'Quicksand', sans-serif;
    background: var(--white);
    color: var(--dark-gray);
    box-shadow: 0 8px 25px var(--shadow);
    transition: all 0.3s ease;
    outline: none;
}

#taskInput:focus {
    border-color: var(--primary-green);
    transform: translateY(-2px);
    box-shadow: 0 12px 35px var(--shadow);
}

#taskInput::placeholder {
    color: var(--sage-green);
    font-style: italic;
}

#addTaskBtn {
    padding: 18px 30px;
    background: linear-gradient(135deg, var(--primary-green), var(--sage-green));
    border: none;
    border-radius: 25px;
    color: var(--white);
    font-size: 1.1rem;
    font-weight: 600;
    font-family: 'Quicksand', sans-serif;
    cursor: pointer;
    box-shadow: 0 8px 25px var(--shadow);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

#addTaskBtn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    transition: left 0.5s ease;
}

#addTaskBtn:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 40px var(--shadow);
}

#addTaskBtn:hover::before {
    left: 100%;
}

#addTaskBtn:active {
    transform: translateY(-1px);
}

.stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin-bottom: 30px;
    animation: slideUp 0.8s ease-out 0.4s both;
}

.stat-item {
    background: var(--white);
    padding: 25px;
    border-radius: 20px;
    text-align: center;
    box-shadow: 0 8px 25px var(--shadow);
    border: 2px solid var(--light-green);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.stat-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: var(--primary-green);
    transform: scaleX(0);
    transition: transform 0.3s ease;
}

.stat-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 40px var(--shadow);
}

.stat-item:hover::before {
    transform: scaleX(1);
}

.stat-number {
    display: block;
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--forest-green);
    margin-bottom: 5px;
}

.stat-label {
    color: var(--sage-green);
    font-weight: 500;
    font-size: 1rem;
}

.filter-buttons {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-bottom: 30px;
    animation: slideUp 0.8s ease-out 0.6s both;
}

.filter-btn {
    padding: 12px 25px;
    border: 2px solid var(--mint-green);
    background: var(--white);
    color: var(--sage-green);
    border-radius: 20px;
    font-family: 'Quicksand', sans-serif;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
}

.filter-btn.active,
.filter-btn:hover {
    background: var(--primary-green);
    border-color: var(--sage-green);
    color: var(--white);
    transform: translateY(-2px);
    box-shadow: 0 8px 20px var(--shadow);
}

.tasks-container {
    min-height: 300px;
    animation: slideUp 0.8s ease-out 0.8s both;
}

.empty-state {
    text-align: center;
    padding: 60px 20px;
    color: var(--sage-green);
}

.empty-icon {
    font-size: 4rem;
    margin-bottom: 20px;
    animation: float 3s ease-in-out infinite;
}

.empty-state p {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 10px;
}

.empty-state span {
    font-size: 1.1rem;
    opacity: 0.8;
}

.task-item {
    background: var(--white);
    margin-bottom: 15px;
    padding: 20px 25px;
    border-radius: 20px;
    border: 2px solid var(--light-green);
    box-shadow: 0 5px 20px var(--shadow);
    display: flex;
    align-items: center;
    gap: 20px;
    transition: all 0.3s ease;
    animation: taskSlideIn 0.5s ease-out;
    position: relative;
    overflow: hidden;
}

.task-item::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 5px;
    background: var(--primary-green);
    transform: scaleY(0);
    transition: transform 0.3s ease;
}

.task-item:hover {
    transform: translateX(10px);
    box-shadow: 0 10px 30px var(--shadow);
}

.task-item:hover::before {
    transform: scaleY(1);
}

.task-item.completed {
    opacity: 0.7;
    background: var(--light-gray);
    border-color: var(--medium-gray);
}

.task-item.completed .task-text {
    text-decoration: line-through;
    color: var(--sage-green);
}

.task-checkbox {
    width: 25px;
    height: 25px;
    border: 3px solid var(--mint-green);
    border-radius: 50%;
    cursor: pointer;
    position: relative;
    transition: all 0.3s ease;
    flex-shrink: 0;
}

.task-checkbox::after {
    content: 'âœ“';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    color: var(--white);
    font-weight: bold;
    font-size: 14px;
    transition: transform 0.3s ease;
}

.task-item.completed .task-checkbox {
    background: var(--primary-green);
    border-color: var(--sage-green);
}

.task-item.completed .task-checkbox::after {
    transform: translate(-50%, -50%) scale(1);
}

.task-text {
    flex: 1;
    font-size: 1.1rem;
    font-weight: 500;
    color: var(--dark-gray);
    word-wrap: break-word;
}

.task-actions {
    display: flex;
    gap: 10px;
}

.task-btn {
    width: 40px;
    height: 40px;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    transition: all 0.3s ease;
    position: relative;
}

.edit-btn {
    background: var(--mint-green);
    color: var(--forest-green);
}

.delete-btn {
    background: #ffb3ba;
    color: #d63031;
}

.task-btn:hover {
    transform: scale(1.1) rotate(5deg);
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
}

.floating-elements {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;
}

.floating-element {
    position: absolute;
    font-size: 2rem;
    opacity: 0.4;
    animation: floatAround 15s infinite linear;
    animation-delay: var(--delay);
}

.floating-element:nth-child(1) { top: 10%; left: 10%; }
.floating-element:nth-child(2) { top: 20%; right: 10%; }
.floating-element:nth-child(3) { bottom: 30%; left: 5%; }
.floating-element:nth-child(4) { bottom: 10%; right: 20%; }
.floating-element:nth-child(5) { top: 50%; left: 50%; }

@keyframes slideDown {
    from {
        opacity: 0;
        transform: translateY(-50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideUp {
    from {
        opacity: 0;
        transform: translateY(50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-10px);
    }
    60% {
        transform: translateY(-5px);
    }
}

@keyframes expandWidth {
    from {
        width: 0;
    }
    to {
        width: 80px;
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-20px);
    }
}

@keyframes taskSlideIn {
    from {
        opacity: 0;
        transform: translateX(-50px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes floatAround {
    0% {
        transform: translate(0, 0) rotate(0deg);
    }
    25% {
        transform: translate(100px, -100px) rotate(90deg);
    }
    50% {
        transform: translate(-50px, -200px) rotate(180deg);
    }
    75% {
        transform: translate(-150px, -50px) rotate(270deg);
    }
    100% {
        transform: translate(0, 0) rotate(360deg);
    }
}

@media (max-width: 768px) {
    .container {
        padding: 15px;
    }
    
    .header h1 {
        font-size: 2rem;
    }
    
    .palette-icon, .brush-icon {
        font-size: 1.8rem;
    }
    
    .add-task-container {
        flex-direction: column;
        gap: 15px;
    }
    
    .stats {
        grid-template-columns: 1fr;
        gap: 15px;
    }
    
    .filter-buttons {
        flex-wrap: wrap;
        gap: 10px;
    }
    
    .task-item {
        padding: 15px 20px;
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
    }
    
    .task-actions {
        align-self: flex-end;
    }
    
    .floating-element {
        font-size: 1.5rem;
    }
}

@media (max-width: 480px) {
    .header {
        flex-direction: column;
        gap: 10px;
    }
    
    .header h1 {
        font-size: 1.8rem;
    }
    
    .filter-btn {
        padding: 10px 20px;
        font-size: 0.9rem;
    }
    
    .task-item {
        margin-bottom: 10px;
    }
}